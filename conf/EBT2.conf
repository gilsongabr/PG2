log syslog all;

router id 20.0.2.1;

define myas = 4230;
table BGP_OSPF;

protocol device {
	scan time 10;
}

protocol kernel {
	export all;
	scan time 15;
}

protocol direct lo_1 {
	import all;
	interface "lo", "r51-0", "r51-1", "r51-2", "r51-3","r51-8";
}

protocol static {
	import all;
}

protocol ospf MyOSPF{
	table BGP_OSPF;
	import where source = RTS_OSPF;
	#ecmp yes;
	#merge external yes;
	export all;

	area 1 {
		interface "r51-0"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r51-1"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r51-2"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r51-3"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r51-8"{
			stub;
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "lo"{
			cost 1;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
	};
}

protocol bgp ibgp_EBT1{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 20.0.1.1 as myas;	
}
protocol bgp ibgp_EBT3{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 20.0.5.2 as myas;	
}

protocol bgp ibgp_EBT4{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 20.0.10.2 as myas;	
}

protocol bgp ibgp_EBT5{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 20.0.6.2 as myas;	
}
protocol bgp ebgp_CE{
	table BGP_OSPF;
	import filter{
		#bgp_local_pref = 155;
		accept;
	};
	med metric on;
	export filter {

		if net ~ 10.0.0.0/16 then reject;
		if net ~ 30.0.0.0/16 then reject;
		if net ~ 60.0.0.0/16 then reject;
		if net ~ 80.0.0.0/16 then reject;
		if net ~ 90.0.0.0/16 then reject;
		if net ~ 20.0.0.0/16 then reject;
		if net ~ 99.99.0.0/16 then reject;

		bgp_origin = 1;
		bgp_community.add((myas,1916));
		bgp_community.add((0,1916));

		if defined (ospf_metric1) then 
			bgp_med = ospf_metric1 ;
		else 
			bgp_med = 0;

		if (0,myas) ~ bgp_community then reject;
		if (myas,1916) ~ bgp_community then accept;
		if (0,1916) ~ bgp_community then reject;	
	};
	local as myas;
	neighbor 90.0.3.2 as 1916;	
}

protocol pipe pipe1{
	table BGP_OSPF;
	peer table master;
	export all;
	import all;
}