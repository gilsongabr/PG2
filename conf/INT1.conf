log syslog all;

router id 30.0.1.1;

define myas = 88;
table BGP_OSPF;

protocol device {
	scan time 10;
}

protocol kernel {
	export all;
	scan time 15;
}

protocol direct lo_1 {
	import all;
	interface "lo", "r70-0", "r70-1", "r70-2", "r70-6", "r70-10";
}

protocol static {
	import all;
}

protocol ospf MyOSPF{
	table BGP_OSPF;
	import where source = RTS_OSPF;
	#ecmp yes;
	#merge external yes;
	export all;

	area 0 {
		interface "r70-0"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r70-1"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r70-2"{
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r70-6"{
			stub;
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "r70-10"{
			stub;
			cost 5;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
		interface "lo"{
			cost 1;
			#type broadcast;
			hello 3; retransmit 2; wait 12; dead 50;
		};
	};
}

protocol bgp ibgp_I2_2{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 30.0.1.2 as myas;	
}

protocol bgp ibgp_I2_3{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 30.0.2.2 as myas;	
}

protocol bgp ibgp_I2_4{
	table BGP_OSPF;
	med metric on;
	import all;
	export where source = RTS_BGP;
	local as myas;
	neighbor 30.0.11.2 as myas;	
}

protocol bgp ebgp_SP{
	table BGP_OSPF;
	import filter{
		#bgp_local_pref = 155;
		if net ~ 10.0.0.0/16 then reject;
		if net ~ 30.0.0.0/16 then reject;
		if net ~ 60.0.0.0/16 then reject;
		if net ~ 80.0.0.0/16 then reject;
		if net ~ 90.0.0.0/16 then reject;
		if net ~ 20.0.0.0/16 then reject;
		if net ~ 99.99.0.0/16 then reject;
		accept;
	};
	med metric on;
	export filter {
		bgp_origin = 1;
		bgp_community.add((myas,1916));
		bgp_community.add((0,1916));

		if defined (ospf_metric1) then 
			bgp_med = ospf_metric1 ;

		if (0,myas) ~ bgp_community then reject;
		if (myas,1916) ~ bgp_community then accept;
		if (0,1916) ~ bgp_community then reject;	
	};
	local as myas;
	neighbor 80.0.1.2 as 1916;
}

protocol bgp ebgp_EBT{
	table BGP_OSPF;
	import filter{
		#bgp_local_pref = 155;
		if net ~ 10.0.0.0/16 then reject;
		if net ~ 30.0.0.0/16 then reject;
		if net ~ 60.0.0.0/16 then reject;
		if net ~ 80.0.0.0/16 then reject;
		if net ~ 90.0.0.0/16 then reject;
		if net ~ 20.0.0.0/16 then reject;
		if net ~ 99.99.0.0/16 then reject;
		accept;
	};
	med metric on;
	export filter {
		bgp_origin = 1;
		bgp_community.add((myas,4230));

		if defined (ospf_metric1) then 
			bgp_med = ospf_metric1 ;
		
		if (0,myas) ~ bgp_community then reject;
		if (myas,4230) ~ bgp_community then accept;
		if (0,4230) ~ bgp_community then reject;	
	};
	local as myas;
	neighbor 60.0.1.1 as 4230;	
}

protocol pipe pipe1{
	table BGP_OSPF;
	peer table master;
	export all;
	import all;
}