 		Experimentação BGP: Um Estudo de Caso no Backbone da RNP

                    Gilson Gabriel Zozias de Santana
                		gilsongabr@gmail.com
                
================================================================================

Este projeto consiste na implementação de ambiente para estudo e aplicação de 
conceitos do protocolo BGP, tais como políticas de importação e exportação, to-
mada de decisão para escolha da melhor rota e manipulação de atributos. O ambi-
ente é formado por quatro sistemas autônomos que se comunicam via BGP em um ou
mais postos de conexão, e utilizam o protocolo OSPF para o rotemanto interno.

Ferramentas utilizadas
======================
	o Linux Network Namespace (Plano de dados).
	o BIRD (Plano de controle).
	o traceroute (Verificar os saltos na comunicação entre roteadores).
	o fping (Verificar as redes conectadas na nossa topologia).	

Como instalar as ferramentas utilizadas
=======================================

	o  BIRD
		- sudo apt-get install bird
	o  traceroute
		- sudo apt-get install traceroute
	o  fping	 
		- sudo apt-get install fping

Como executar o projeto
=======================

Para executar o projeto basta executar o scrip "rnp.sh", porém antes de execu-
tar esse scrip, o campo do atributo "PATHWAY" deverá ser alterado para 
"$PATHWAY/home/(nome_do_computador)/(pasta_do_download_do_projeto).

Como visualizar as tabelas de roteamento dos roteadores
=======================================================

A tabela de roteamento de um roteador pode ser visualisada acessando a 
pasta /tmp/(roteador)/var/run, utilizando o terminal de comando, e executar 
com comando "birdc -s bird.ctl". Em que podemos visualizar os resultados das 
configurações implantadas no roteador.

Utilizando o traceroute e fping
===============================

Utilizando o comando "ip netns exec (roteador) traceroute -s (endereço_de_ori-
gem) (endereço_de_destino)", nos iremos verificar o caminho de uma rede para 
outra. Já utilizando o comando "ip netns exec (roteador) fping -S (endereço_d-
e_origem) (endereço_de_destino)", nós verificamos se o endereço de destino es-
ta conectado com a rede de origem.  